7/9/15/19/20


//Write a program to create a child process using fork(). The parent should goto sleep state and child process should begin its execution. In the child process, use exec!() to execute the "Ls" command//


#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <stdlib.h>

int main() {
    pid_t pid = fork();  // Create a child process

    if (pid < 0) {
        // If pid < 0, fork() failed
        perror("Fork failed");
        return 1;
    } else if (pid == 0) {
        // Child process
        printf("Child Process ID: %d\n", getpid());
        printf("Executing 'ls' command in Child Process...\n");

        // Replace the child process with the 'ls' command
        execl("/bin/ls", "ls", NULL);

        // If execl() fails
        perror("execl() failed");
        exit(1);
    } else {
        // Parent process
        printf("Parent Process ID: %d - Going to sleep.\n", getpid());
        sleep(10);  // Put parent process in sleep state
        printf("Parent Process waking up.\n");
    }

    return 0;
}

